<?xml version="1.0" encoding="utf-8" ?>
<Application xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:fontawesome="clr-namespace:FontAwesome"
             xmlns:gradient="http://magic.com/schemas/gradients"
             xmlns:pancake="clr-namespace:Xamarin.Forms.PancakeView;assembly=Xamarin.Forms.PancakeView"
             x:Class="Novenen.App">
    <!--
        Define global resources and styles here, that apply to all pages in your app.
    -->
    <Application.Resources>
        <ResourceDictionary>
         
            <!--#region BlUE GREY PALETTE -->
            <Color x:Key="Primary">#2196F3</Color>
            <Color x:Key="Primary_Dark">#1976D2</Color>
            <Color x:Key="Primary_Light">#BBDEFB</Color>
            <Color x:Key="Text_Icons">#FFFFFF</Color>
            <Color x:Key="Accent">#9E9E9E</Color>
            <Color x:Key="Primary_Text">#212121</Color>
            <Color x:Key="Secondary_Text">#757575</Color>
            <Color x:Key="Divider">#BDBDBD</Color>
            <Color x:Key="Label_Backgroundcolor">#E7E6E6</Color>
            <!--#endregion-->

            <!--HINTERGRUND-GRADIENT FÃœR DIE EINZELNEN TAGE DER NOVENE-->
            <Style x:Key="NovenenBackgroundGradient" TargetType="gradient:GradientView">
                <Setter Property="GradientSource"
                        Value="{OnPlatform iOS='radial-gradient(circle at center center, rgb(252, 252, 252),rgb(129, 129, 129))',
                        Android='radial-gradient(circle at center center, transparent,rgb(255,255,255)),linear-gradient(309deg, rgba(90, 90, 90,0.05) 0%, rgba(90, 90, 90,0.05) 50%,rgba(206, 206, 206,0.05) 50%, rgba(206, 206, 206,0.05) 100%),linear-gradient(39deg, rgba(13, 13, 13,0.05) 0%, rgba(13, 13, 13,0.05) 50%,rgba(189, 189, 189,0.05) 50%, rgba(189, 189, 189,0.05) 100%),linear-gradient(144deg, rgba(249, 249, 249,0.05) 0%, rgba(249, 249, 249,0.05) 50%,rgba(111, 111, 111,0.05) 50%, rgba(111, 111, 111,0.05) 100%),linear-gradient(166deg, rgba(231, 231, 231,0.05) 0%, rgba(231, 231, 231,0.05) 50%,rgba(220, 220, 220,0.05) 50%, rgba(220, 220, 220,0.05) 100%),linear-gradient(212deg, rgba(80, 80, 80,0.05) 0%, rgba(80, 80, 80,0.05) 50%,rgba(243, 243, 243,0.05) 50%, rgba(243, 243, 243,0.05) 100%),radial-gradient(circle at center center, hsl(107,19%,100%),hsl(107,19%,100%))' }"
                />
                <Setter Property="VerticalOptions" Value="FillAndExpand"/>
            </Style>

            <Style x:Key="AnschlussgebeteBackgroundGradient" TargetType="gradient:GradientView">
                <Setter Property="GradientSource"
                        Value="{OnPlatform iOS='radial-gradient(circle at center center, transparent,rgb(255,255,255)),linear-gradient(309deg, rgba(90, 90, 90,0.05) 0%, rgba(90, 90, 90,0.05) 50%,rgba(206, 206, 206,0.05) 50%, rgba(206, 206, 206,0.05) 100%),linear-gradient(39deg, rgba(13, 13, 13,0.05) 0%, rgba(13, 13, 13,0.05) 50%,rgba(189, 189, 189,0.05) 50%, rgba(189, 189, 189,0.05) 100%),linear-gradient(144deg, rgba(249, 249, 249,0.05) 0%, rgba(249, 249, 249,0.05) 50%,rgba(111, 111, 111,0.05) 50%, rgba(111, 111, 111,0.05) 100%),linear-gradient(166deg, rgba(231, 231, 231,0.05) 0%, rgba(231, 231, 231,0.05) 50%,rgba(220, 220, 220,0.05) 50%, rgba(220, 220, 220,0.05) 100%),linear-gradient(212deg, rgba(80, 80, 80,0.05) 0%, rgba(80, 80, 80,0.05) 50%,rgba(243, 243, 243,0.05) 50%, rgba(243, 243, 243,0.05) 100%),radial-gradient(circle at center center, hsl(107,19%,100%),hsl(107,19%,100%))',
                        Android='radial-gradient(circle at center center, rgb(252, 252, 252),rgb(129, 129, 129))'}"
                />
            </Style>

            <Style x:Key="PancakeViewHeaderNovenen" TargetType="pancake:PancakeView">
                <Setter Property="BackgroundColor" Value="{OnPlatform iOS='#9C9C9C', Android=DarkGoldenrod}"/>
                <Setter Property="CornerRadius" Value="0,0,15,15"/>
            </Style>

            <Style TargetType="ContentPage">
                 <Setter Property="Background">
                    <LinearGradientBrush EndPoint="0,1" >
                        <GradientStop Color="DarkGoldenrod" Offset="0.0" />
                        <GradientStop Color="Black" Offset="0.5" />
                        <GradientStop Color="DarkGoldenrod" Offset="0.95" />
                    </LinearGradientBrush>
                </Setter>
            </Style>
            <Style TargetType="Label">
                <Setter Property="TextColor" Value="Black"/>
            </Style>

            <Style TargetType="BoxView">
                <Setter Property="Color" Value="{StaticResource Divider}" />
                <Setter Property="HeightRequest" Value="0.7"/>
                <Setter Property="Margin" Value="5,0,5,0"/>
                <Setter Property="CornerRadius" Value="20" />
            </Style>

            <!--<Style x:Key="BoxViewLayer" TargetType="BoxView">
                <Setter Property="BackgroundColor" Value="Black"/>
                <Setter Property="Opacity" Value="0.5"/>
            </Style>-->
            
            <Style x:Key="BoxViewGray" TargetType="BoxView">
                <Setter Property="HeightRequest">
                    <Setter.Value>
                        <OnPlatform iOS="0.5" Android="0.2"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Color" Value="Gray"/>
            </Style>

             <Style x:Key="BoxViewPlatformspecific" TargetType="BoxView">
                <Setter Property="HeightRequest">
                    <Setter.Value>
                        <OnPlatform iOS="0.5" Android="0.2"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Color">
                    <Setter.Value>
                        <OnPlatform Android="{StaticResource Primary_Text}" iOS="Black" />
                    </Setter.Value>
                </Setter>
            </Style>


            <!--<Style TargetType="Frame" >
                <Setter Property="CornerRadius" Value="20" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="IsClippedToBounds" Value="True" />
            </Style>-->

            <Style x:Key="ButtonRound" TargetType="Button" ApplyToDerivedTypes="True">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{OnPlatform iOS=DarkGoldenrod, Android={StaticResource Accent}}" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Disabled">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{StaticResource Divider}" />
                                    <Setter Property="TextColor" Value="{StaticResource Secondary_Text}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
                <Setter Property="HeightRequest" Value="60"/>
                <Setter Property="WidthRequest" Value="60"/>
                <Setter Property="CornerRadius" Value="30"/>
                <Setter Property="HorizontalOptions" Value="End"/>
                <Setter Property="Text" Value="{x:Static fontawesome:FontAwesomeIcons.Bookmark}"/>
                <Setter Property="FontFamily" Value="FA-S"/>
                <Setter Property="FontSize" Value="Large"/>
            </Style>

            <Style TargetType="Button">
                <Setter Property="TextColor" Value="{StaticResource Text_Icons}"/>
                <Setter Property="FontAttributes" Value="Bold" />
                <Setter Property="FontSize" Value="Medium" />
                <Setter Property="BorderColor" Value="{StaticResource Secondary_Text}"/>
                <Setter Property="BorderWidth" Value="1" />
                <Setter Property="CornerRadius" Value="10"/>
                <!--<Setter Property="Background">
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1" >
                        <GradientStop Color="SlateGray" Offset="0.15" />
                        <GradientStop Color="Gray" Offset="0.5" />
                        <GradientStop Color="DarkGray" Offset="0.75" />
                        <GradientStop Color="LightGray" Offset="1.0" />
                    </LinearGradientBrush>
                </Setter>-->
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{OnPlatform iOS=DarkGoldenrod, Android={x:StaticResource Accent}}" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Disabled">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{StaticResource Divider}" />
                                    <Setter Property="TextColor" Value="{StaticResource Secondary_Text}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>


            <!--#region FONTAWESOME.COM--> 
            <!--<OnPlatform x:TypeArguments="x:String" 
                        x:Key="FontAwesomeBrands">
                <On Platform="Android" 
                    Value="FontAwesome5Brands.otf#Regular" />
                <On Platform="iOS" 
                    Value="FontAwesome5Brands" />
                <On Platform="UWP" 
                    Value="/Assets/FontAwesome5Brands.otf#Font Awesome 5 Brands" />
            </OnPlatform>

            <OnPlatform x:TypeArguments="x:String" 
                        x:Key="FontAwesomeSolid">
                <On Platform="Android" 
                    Value="FontAwesome5Solid.otf#Regular" />
                <On Platform="iOS" 
                    Value="FontAwesome5Solid" />
                <On Platform="UWP" 
                    Value="/Assets/FontAwesome5Solid.otf#Font Awesome 5 Free" />
            </OnPlatform>

            <OnPlatform x:TypeArguments="x:String" 
                            x:Key="FontAwesomeRegular">
                <On Platform="Android" 
                    Value="FontAwesome5Regular.otf#Regular" />
                <On Platform="iOS" 
                    Value="FontAwesome5Regular" />
                <On Platform="UWP" 
                    Value="/Assets/FontAwesome5Regular.otf#Font Awesome 5 Free" />
            </OnPlatform>-->
            <!--#endregion-->

        </ResourceDictionary>        
    </Application.Resources>
</Application>
